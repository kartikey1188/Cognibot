[Music] let us create some data frame with dummy values in it okay so we can say that um where is my so we say that data frame is equal to PD dot data frame and let's say we want to uh put let's say we want to generate how many columns maybe five columns or 10 columns for example or nine columns so we can put some random values so we can say np. random. Randon and we can say I want to generate nine rows and four columns so this is the first uh argument we give then we put something in index so we can Index this using we can use first eight letters in the series a b c d e f g h i 9 right so we have uh we are planning for nine rows so we need to have uh one value each for the row index and we can also give the names to the column index so we can give the names to the columns we say that columns is equal to again list a b c d so uh if you get confused right I what you can do is you can see what this returns this will return an array right with uh four names a b c and d and in the same way you can see what this one returns right it it return um it returns an array with nine elements in it right so now when I do this think we made some mistakes so we have to import numai as NP and then execute this okay now you can see the shape of this data frame you can see that you can see that there are nine rows and four columns you can get the column names you can see that a b c and d are four columns here you can see the info right so you can see all of them are nonnull there are four columns each with nine values and these are float 64 values and you can do DF do head to examine the values yeah now you can see uh this right you can see that there are we printing first five rows by that's what head prints by default right so this is the index right so uh the first row is index by letter a second is index by b c d and e and there four columns and these values are generated using a random number generation so you can put anything here right you can say th000 whatever uh but remember you will have to create uh those many you you need to create the labels for this but uh if you say that I can also do this right another DF I copy everything and what I do is I say that generate 100 right and here I say that get me range 200 we'll quickly check here right what range does this works or not okay we have to do range now you can just see whether this generate something like this yeah it generated we can doe yeah so now you can see that since you have said index is range 100 right so here the rows are indexed by number this is 0 1 2 3 and so on so you can also do range between 10 and 110 I'll take a question wait a minute now you can see that uh the range uh the index started at zero it will go all the way up to 110 109 so we'll say another DF dot this will print last five Els yeah okay any questions sir I have a question uh the list a b c d e f i j you have given first nine character right but uh if if it is more than if it is more than 26 then it will be a problem so that's what yeah yeah that's what I did here right uh instead of characters we can use numbers just what we have done here yeah yeah but my question is is different actually suppose uh if I use a to J and then a a a like that I mean what the Excel is using in the for the column name that can be done by I mean we can give some format or anything to generate yeah yeah you can yeah you can you can give a list you can give a list of the names it's okay yeah but for that you will have to write code to generate that if you are thinking of generating it you have to write code to generate it okay okay okay I got yeah I'm just showing something very simple uh in the context of pandas okay yeah all right so now now now we can do many things so let's say now you want to find out okay let's quickly do selection you can do location now this will result into error right because DF right so what what is there in DF index if you say you will see what is there in the row index but if you now use DF do lock of zero this will result into error this is an error right it says that um see this value Z is not there in the index uh list that's why this will result into an error but if I do a yeah it printed the values got it so in log whatever you use make sure that this is part of this index okay we can also do this DF of block I want want a and then I want something yeah you can see that now instead of four values it only printed two values for column B and D B and C yeah you can see that now there are three values that are printed it or I can also do DF dot if I want to print multiple rows I can also say that print everything between a and d and all columns you see this so we are getting all rows with names a b c and d h is this clear any questions on this this is nothing different I'm just reiterating this again what we studied in the last class and I hope you following what I'm doing how did you made the table what did you click I miss it yeah yeah uh okay let me let me run this again so it comes like this right then there are two of these icons do they come for you yeah this will basically print some graphs I guess I've never tried this yeah it printed graphs see you don't even have to write code now for these kind of things it is there can see distributions and whatnot I mean if this suffices your work you can also look at this in the table format and because of this table right you can get sorting and other things for fre yeah so this is useful to uh basically you can also put filters here just like you put in Excel right all of that is possible now you can put filters saying that I want just b and c Index this index might be different this is like index one example or I say index a a yeah you can get a to B this won't work a comma B okay index a yeah all these type of things you can you can do here yeah these are some Advanced features of collab I mean this is nothing to do with uh pandas or data frame if you use Jupiter notebook you won't see these typ type of things okay that's not part of our we are not studying collab we are studying pandas okay uh go ahead get that analytics symbol uh it is there in cab oh okay yeah it is yeah it is just for small purpose okay uh any other questions so now you can also see how you can get the same result with iock so we say we want first four rows right 0 to four yeah you can see that the results are the same we did iock in iock we are specifying the integer index index indices we saying that get me first four rows so so iock always the indices starts from zero by default Yeah Yeah Yeah Yeah by default it starts from zero you can also do this it will result into the same thing sorry uh the first four yeah can also do first four ick okay and here also you can say you want the second and third for example now you will not see all the rows you just saw only one of that right so this is 012 if I sa it into and four you will see C and D or you can say between one and three so now with iock we can also refer to these uh columns by the integers so for example this may not work we'll check DF do iock let's say I want to print first for want see this doesn't work iog always requires numerical indexes this won't work so keep this in mind if you're using iog you have to always specify only integer indexing yeah yeah are you following all yes sh go ahead sir in the log query when you you are using the second column for the uh selection of row uh columns right MH mhm so is it really necessary if uh I want to print all the columns uh do I have to like write the col or maybe I can just leave it yeah you don't have to write colon even uh by default what happens is that iog right if you do not specify anything it is by default colon yes so it is not required but I'm just showing showing it to you right this will also work or even this will work right so you can also do DF do iog if you want all rows sorry all rows from the second column for example yes you see yeah okay any questions any other questions all right I think this is this should be clear now and you also had a live session right last Sunday so I'm sure Manoj has um also so touched upon all these points I'm retreating all of these things to make sure that all of you are following along and uh there are no issues because it's quite fundamental if you understand this lock I log those are two very very fundamental things so are you familiar with Lambda function in Python are you no sir you're not familiar with Lambda function in Python no sir no sir please go it yes somehow familiar okay so Lambda function is a um basically way of writing uh nameless functions you don't have so if you want to Define functions what happens is that you uh you define the function you give it a name you write the body right so but sometimes what happens is that you don't have to you may not want to use that function again but you want to have some nameless function so I'll show you one example of this okay uh right so we do this so we can say DF do location so we will Define the selector so our selector is um we say that our selector is a Lambda function for example we say Lambda DF we say that wherever this value greater than zero I want to select it for example I'm going to check whether this works what is there in the selector okay so this is a Lambda function now what we'll do is we use DF Dot Lock and uh we say I want to use selector I want to see all the rows where this selection criteria is met okay this has failed we'll see okay we will Deb I think we have put it in the column section the log uh which is okay uh okay I see I see what is happening here if we just do DF log selector yeah this works thanks thanks for letting so what we are basically doing is we are selecting all row where the value in column A is greater than zero so we are passing the data frame as an input to this function and here in the function body we are uh we are seeing uh we are basically checking whether the value in the column A is greater than zero so we can also do this right we can instead of zero we say 0.5 and now you saw only six rows right earlier there were nine rows we compare it here quickly .5 and you have six rows here you have nine rows here okay so you can have these type of Lambda functions also okay in the selector okay uh that is another one uh what else uh we want to now also understand the [Music] um you want to understand the and type of things right so we can we can also try that in Lambda function for example right so we say selector so where and DF of B is less 7.2 you can see that there are just two rows right you can also quickly check that right so greater than 05 and less than 02 so greater than 05 less than 2 this is false greater than5 but this great is not made uh yeah greater than 05 less than 02 so these two entries a and I made it to the list okay uh you can also you need not necessarily write Lambda function for this but I I I thought I'll just show you you can also do this with Lambda so this is called These are called uh function selectors okay okay so you can also do it this way so we can say condition for checking and we just put this condition for checking here or condition for evaluation of selection now you see that this will be uh contr c c this will be a list of true and false and when you put this list only yeah this should also work I guess yeah why yeah this works only two of them are I think this was not working in my opinion no this was also working this also works okay getting it so there are these two ways in which you can write it you can write either a Lambda function or you can write simp selection criteria and then get this list and then put that list uh in the data frame selector and you'll get the row that are meeting the the selection criteria or selection condition okay what is the purpose of Lambda then if we can do the condition uh where do we use at least uh where do we exactly use Lambda function so let's say uh these conditions are right now simple conditions but instead of these conditions you want to do some mathematical operations mathematical calculations or whatever right then you can you can probably do Lambda functions over there okay so you can um can you try couple of them now with r condition and uh so you can try with r condition uh or operator rather or operator or is done like this and not operator okay so you can also use or like this say or and you see more more of these type of things you can put a not you can put a KN here this or not this yeah okay is this clear how to write complex conditions [Music]