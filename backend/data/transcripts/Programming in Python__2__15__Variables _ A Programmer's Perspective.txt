Here is an important tip that I am going 
to convey through a small program. So let   us start with this little story of two brothers, 
Ram and Lakshman. Let us say Ram s bank balance is   one lakh and his bank loan, Ram s 
bank loan is let us say 5 lakhs.   Lakshman, his brother's bank loan is, his 
brother's bank balance is let us say 20 lakhs   and his bank loan is let us say 10 lakhs.  
Do you observe something here?   Is it not indeed confusing to call it A, B, 
C and D? Is it not important that we make the   variables sort of self-explanatory? And that we 
need not break our head on what exactly did I   say just now? Was it bank balance or loan? Was 
it the brother Ram or the brother Lakshman? 
  So it is easy if I were to simply name this 
as Ram bank balance, ram_bank_balance maybe   and then here instead of B I can say ram_loan. 
Instead of C I can say lakshman_bank_balance.   This character is called underscore that I am 
typing it looks like dash but it is a little   below dash at the line level and then I will say 
lakshman_loan. Now with this it is sort of easy   for me to calculate the, assuming that these 
two are brothers staying in the same house and   I would say the net income of the house is Ram's 
bank balance plus Lakshman s bank balance.  
  And let us say the net liability is what they owe. 
Ram s loan plus Lakshman s loan, makes sense. Now,   the final value let us say whatever that 
is, is net income minus net liability   and I will print the final value hoping 
that there are no errors right now. Let us   see. So the final value is 6 lakhs. So the 
family has, let us say, so the family has   6 lakhs. 
Let me restart this kernel   then we re-execute it. The   so, the family has 6 lakhs. If let us say Ram 
s loan or let us say even Lakshman s loan was   a little more, then it would come 0 here thus 
making it how much 10 lakh, 1 crore. So the family   has minus 84 lakhs loan. So, if it is minus, if 
it is minus it will be liability, if it is plus   it is it is the surplus, it is the extra.
So is it not easy on your mind when I say,   when I give the variables like this than 
say A, B, C and D. Here is an important tip.   Tip number 1; try to make your variables 
self-explanatory. Second tip is add comments.   How do you add comments? You add comments by 
putting a hash followed by whatever you type here   is to be ignored by the computer. Nothing will 
happen when you put a hash like this. So still,   you get the answer as it is, as you can 
see. So whatever you type after hash,   the computer will ignore it. 
So what I will do is,   then why would, so why are people mad enough to 
put a hash followed by something if the computer   ignores, what is a need for us to put that? 
The need for us to put something after hash   is because sometimes when we declare a variable 
like this; we would know what we are doing,   but after a few days we will forget what exactly 
was the reason, why we declared this variable.
  Especially if the code goes to several 1000s of 
lines we are bound to forget despite our being   careful and giving variables that are real life 
like still we will forget. So what I will say   is the Ram s bank balance note that this is 
positive. Ram's loan, this is his, this is   to be returned by him and hence will count, again 
the next line if you want to come you should   put hash once again will count as negative. 
And Lakshman s bank balance is self-explanatory.   Net income, generally you put the comment below 
it, you can also consider putting above it not a   problem, net income is the total bank balance 
of the two brothers. Net liability is the   total loan of the brothers, of the family 
brother. The final value is the family's final,   let us say final money could 
be positive or negative. 
  So the family has so and so, as you can see, 
nothing changes. I am executing it to one once   again and then you see nothing changes when 
you include comments. Comment is only for you,   for your purpose, just to ensure that if you 
see it after a few days or weeks or months,   or sometimes even years, a software engineer 
writes a piece of code running into several 1000s   of lines and someone else takes a look at it. 
It must make sense. It will make sense only if   you have taken care of the variables made it 
very sort of human friendly, reader friendly,   programmer friendly. Secondly, you have included 
a lot of comments. So what we will do is from   now onwards, we will include a lot 
of comments in our program. 
  It is a very, very, very good programming 
practice, did not mean to exaggerate, it indeed   is for one to put a lot of comments. It is a very 
good programming practice. But unfortunately,   many, many people do not do it for some reason. 
Maybe they are lazy or they do not want to kill   their flow of thoughts by including comments, 
but trust me, maybe you can try writing the   code the way I did and then come back and then 
write comments before you close the compiler   ensure that the code that you have written is 
commented. That is a good programming practice.