[Music] so the next topic is selection of selection in general okay so now uh let's say uh you said DF of one right and see what comes out of that this gives you an error now we know uh let's first print the columns in the data frame these are the columns right so now you can select a column if you say DF and give the name of the column Edge we'll get all 442 values in the age column getting it and in this you can select probably the zeroth [Music] value which is the uh value in the let me first print this and now you have so let us copy this right A series this is Series right so we have a series and you can confirm this right so type of dfh this should be series the series right so series you have 442 values and each value has Associated index so now you can um access so zero will be the zero value and all of you are familiar with the python lists right so all of of these slicing and things like that will work so this will select first five values in the uh age list so you can see that these first five values are here if you want to select last five values from this you can simply say minus5 Min - 5 yeah these are last five values 437 to 441 okay all right uh you can do any other uh selections like this you can do any other slicings like this so let's say you want values between 100 200 you can see these values right between 100th and uh 200th value okay uh Krishna you have a question so just had a small doubt sir so in the C looking at the values in the series for the age for the we have seen that after decimal there are five five or six significant values but when you are accessing as specific uh index we are really able to see a huge float value like in the sense sign figures are something like 10 digits and all MH so what is what is why is it like happening like that and what is more important does it have any implication like no this is just simply uh simply the way it is printed right I mean for printing they have they're just selecting probably first six value that's it it has no other implication okay thank you sir yeah okay so in this way so here we were seeing values from a single Series right so let's say we want to get data from two columns yeah so now uh we are seeing data from two columns age and S so what we did is we gave a list of columns as um you know inside the DF so DF and we wanted two columns here so this is how we can get two columns um and then you can again do all of these type of things here you can get to see first five rows last five rows and things like that you can do all kinds of sling here sorry first five rows then you can do last five rows okay minus 5 okay and uh you can get specific row number right now this is not working let me see why for 441 should have worked huh now these things are not working last last colon is needed right right 440 follow no that is not needed as such let me see if minus one works minus one will also not work I see okay this is last but one value uh maybe we have to give the column indicators here okay we we'll see how to uh get there okay so is it clear how to select uh single single column multiple columns that part is now uh we have taken care of now what we will do is uh there are two important um there are two important functions that we should be aware of one is called do lock and second is called Dot ilock Lock is location and I loock is integer location okay uh so in location you can basically give the index of the row and you will get that Row in I location you can give uh the position in terms of the integer value so for example we do so this will not work DF of Z won't work this won't work this gives you key error but if you can do DF Dot I loog of zero this will work so this essentially gives you the the record the first row in this data frame so if you print the data frame um DF do head if we do n equal to one this is the first two right so you can see uh there are all these St attributes and the stain attributes have exactly the same values and the name here is zero so okay so iock we are able to specify the integer locations so you can see DF do iock 441 C 4401 value now if I do DF dolog one I hope this works yeah DF do log 1 or DF do log0 so this lock right so there are there are these values that you see getting printed over here if you do Nal to 5 you can see these are the numbers that are getting printed here right 0 1 2 3 4 these are called as row indices and these are column indices right so row indices so in Dot Lock you can specify the row index so because there is zero present over here so this zero will be matched with whatever you give in Lock and that particular row will be uh selected in case of lock when we do iog it looks at the integer position right so this is the uh the zero row and do log of zero because this particular row has uh index value of zero that's why whenever we say zero it's uh the same row is getting selected I know there will be a lot of questions I will take them yeah go one by one yes it is not Audible okay uh um go ahead um and shy both of your questions um and then sh yes both look same so I'm not finding any difference a little confused both are giving the same output right both of them are giving same output uh the point that I want to emphasize is that they do different different things whenever you uh use uh eloc you can only specify the the the value in the IND so these are the values in the index 0 1 2 3 4 these are the value in the index yes okay so uh so you can think you can also replace them by um uh let's say text you can see that first row second row third row fourth row and fifth row and when you do DF dolog first row then this will be printed right whereas in ilog this will always be the zeroth uh uh row so iock whenever you do iock uh the value that you specify is very much like the way we do any array indexing so if you want to um use array style uh indexing and selection you have to use ilock okay is that clear yes sir okay shy you have a question yeah so my question was like uh as I mentioned in the I position we have to mention the integer position of the L right right like okay in the position like if I know some value of the age of the in the list if I mention like L and in the me exact yeah yes yes yes yes if you specify the if you specify the value of the index of that row you will get the exactly exactly that row with lock with lock just a minute just a minute just AE let me finish with SH yeah yeah so I was asking that if we don't mention the index any value from the index like any value uh in the other columns like if I know some value in the H column if I just mention that in the in theet in the yeah that I I I'll come to that that is called as conditional selection we'll take it up after this okay okay okay give me some time I I'll come to that uh yes ashim yes sir ilock is the position of the data set right uh position of the row in the data set position of position of the row and lock is the only row value or something like that so lock inside lock right you have to specify the label of the row right yeah or label index label index that means row value right yeah uh row index uh it is called as row index in technical term you have to specify the row index okay row index but in this case in this case in this case um okay in this case the row index is also zero uh for us yeah value both both value are both both both are the same that's why so if if it started from the one I mean leave the Z then that time iog is the zero position and one is the first value right correct correct correct correct correct correct yes sir I got it thank you yeah this is bit confusing and many of many of us try to access data frame as as if we are accessing the um the arrays and that doesn't work so we have to remember that is lock and ick those two things um are basically [Music] used uh hello sir yes can I say something here yeah go ahead go ahead please okay so usually uh we use iock when uh we want to specify uh indexes and columns as numbers like numerical value 0 1 2 3 4 5 something but uh if you want to access let's say age and the fifth row of age then uh you can use log and you can write uh DF dolog let's say fifth index then five then you put comma and you can write age as a column value age and that will give you the value what are available in the age column uh so the lock will give you uh uh what I can say is uh that you can write strings also inside uh yeah I think you can't do it yeah that's a good point let me actually showcase um you know show that particular example uh so as Mano was saying right so let's say you want to add you want to access fifth value in the age right so you say DF dolog fifth value in the edge so you can see or fifth value is not visible here so I'm just doing fourth value in the edge you can see the value this particular value you can but if you now try iock right this will fail this will fail so if you want to do the same thing with ilog you'll have to give the uh position of this age which is zero uh or one maybe why I look uh you didn't change to iock oh yeah yes sorry iock thanks yeah you can see that is the same thing right so whenever you see iock you cannot give the strings inside so here instead of AG I'm saying that get me fourth value in the zeroth column right or we can also do multiple of them get me fourth value in first two columns for example first two columns yeah so you can see uh these are the names of the columns and these are the corresponding values is this clear yeah get it I mean it's okay if you take some time to understand this yes sir for me it is clear because one I have to use the inter number and one I can directly use the column name or yeah whatever the value it has yes I got it that's correct yes who has question now shy go ahead Yeah so basically the difference in log and iog is isn't when we are selecting by both row and columns right no the difference is that in ilock whenever you are using ilock you have to only specify the integer index remember this you to always refer it by integer values you cannot use any other descriptive uh attributes okay is it clear with everyone um it's okay if you want to take few minutes to play with this a bit you want to play all of you are you following me or yes sir got it sir yeah yes go ahead lnat lnat you have a question please go ahead sir am I audible now yes uh can I specify that lock is similar to dictionary access and iock is similar to R access yeah you can see that that's that's a good point yes thank you sir okay is this clear yes sir so we can also access right so with lock right here we access just one column right so we can access also multiple columns so you can say with lock so see uh here we access two columns but we didn't have to specify spey their names but if you want to do that with the same thing with lock right we'll have to specify the names of the columns again you got the same output and these are two different ways of doing the same things [Music] okay sir can you do in the iog in same way I mean you you give an example Z colon 2 right but I would like to say 1 5 7 9 uh here yes okay so you can just do 1 5 7 9 something like that same way yeah same way you have to give a list here thank you sir yeah AB n is saying something basically lock is a location you want to find with the exact position as mentioned in table I lock yeah exactly uh it's not exact position but we are using uh the the index value or the label to access it with lock okay yes go ahead please uh yes sir so as you mentioned right for iock it has always the reference has to always be integer integer right but whereas with the lock you can also even the uh series itself can be named and even the uh if you will the record itself can be named yes for example instead of four if I actually say DF do lock and the value right it will give me that record correct correct correct so it is not just so it's not a position indicator necessarily this is position indicator this is the uh this is the label of the row that you're interested in yeah but if I have if I have a let's say instead of four let's say you have row four right yeah if I if let's say that the first row is actually first series is actually a set of names first series which which first series you mean uh this one is it I mean h so let's the first one in yeah yeah instead of eight if it is a let's say names right just for sake of disc then if I use a name it will actually give me that particular record no no not really um so the row here right row is referred by uh so if unless you use name as the index row index oh okay okay so you can specify any column as an index for the table right you will have to you have to specify that and get that in the index and then only you can refer to that row as with the index okay otherwise it's a sequential numbers yeah yeah yeah yeah yeah okay thank you sir go ahead shine so s like as you discussed that in the lock function we can use the array as our locator so as you use in the iog like the for like the hello yes yes yes I can hear you yes good so like in the I thing as you write the columns like 1 five seven and n as a list can I use that in the lock as well yeah you can but but in lock you have to give the names you have to give the description the the labels okay so the name uh so giving the name is like a necessary thing yeah yeah it's necessary in lock in Lo no no you cannot do it all right just to clarify what San just mentioned so uh and I was just reading also the help for that right so in case of lock it says the first parameter always is the uh index value row index yes yes row index and by default if you don't specify an index then data frame provides a index which starts from 0 to yeah exactly in in minus one so if I I have specified a particular series as an index I think there's a function called set index right set IND so using that if I Define a particular series as the index for the data frame correct then I can use the value in that particular series correct that's right thank you sir yeah there are there are few more things to it right I mean that series have to have uh unique values and things like that so otherwise it will uni unique values correct like a primary key or something yeah yeah so think of this as a primary case right okay I hope this is this makes it clear lock and iock right okay um yeah what more can we do with this sir it sir if you can reverse the table uh we are we are showing it 0 1 2 3 4 if we reverses the table then it will be more distinctively we will understand I mean zero and the value which are using right uh what do you mean by reversing the table sorry oh okay okay okay okay s the if you if you show me that first four values right yeah yeah if I reverse it then if I take to zero position then fourth column value will be coming I see I see I see I see I see I see what you're saying okay yes yes and but if I have to use the lock that time I have to use the P not yeah yeah that's correct that's correct okay uh perfect now uh let's see what more can we add here uh okay let's try to see the conditional slicing okay we can give some conditions and try to slice so let's say we want to do DF do location DF do age let's say we want to do something on age so for that I need to understand what is the okay so let's look at the summarizer so age right what is the 50 8 percenti is this value okay so we say we want to do we want to see all the rows where AG is less than this value okay so what I'm doing is I want to see all rows okay so these are all rows where AG is less than some value and we'll assign let's say so I say hdf let's say this temporary and you can see that this a AG DF has 214 rows and here we have written the uh index of the original uh original data frame so is this clear how we can add conditions so you can add conditions based on any other columns that's not a problem okay is this clear this conditional slicing or you can do exactly you can do something like this so where equal to this there is nothing equal to this or greater than this yeah there are 28 rows here and now you can do things on top of this right so say do iog 0 position this is the entry present on the zeroth position say do lock one yeah okay uh I think there are some questions okay um krishon is saying that if you drop log still we get conditional table fine we'll try that uh shyen and Asim has question again shyen go ahead so like if you want to include like more than one conditions the conditions given in a list no you you can actually use and or those type of uh things there in conditions we will try that huh we'll try one of that sir here we are using log with a zero then we'll be error DF of zero uh yes yes this one last one what you are using no this this this was anyway giving error no this is not correct we cannot do this this is an error no not this one sir earlier this one this one yeah yeah I was doing L the value is using right the number of row index value is using over here yeah so if I use zero which is not present in this DF then it will be error uh let's see okay yeah it gives you an error because it is not present it's a key error in the same way if you do two it will not give you that because two is also not present it's 1356 right but iock doesn't have that problem iock will not have that problem yes because is going going to take the position of this yeah yeah exactly I lock of two will also work I lock of two will work it gives you the third element H clear yes sir yeah shine is your question clear okay shy yeah he asked me yes totally okay so you can also do this that is fine so as Krishna moan suggested he's saying that lock is not required that's fine this will also work this is what he's saying let's try yeah it [Music] works