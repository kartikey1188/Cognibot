[Music] oh okay so what we have done here is we have you know taken few cities we constructed a data frame of the Cities we gave the name name to the column or we can make this a city name maybe so you can see city name and then there are the Seven Cities here and these are the indices okay now let's say add a conditional statement [Music] CDF now what do you see here you see um whether a given row satisfies this condition or not so you see basically a right conditions now you can see this condition [Music] is so this is a series object and what you can do is [Music] so when you add the series object here in the selection criteria you basically get the name of the uh the matching row and again you can examine this right and in this particular one you have basically Boolean values true and false so it is true if the condition is met if it is it is false if the condition is not does this make sense you can also do this in a single line without doing all of these type of things you can say CDF get exactly you can change it getting this is this clear to everyone okay all right somebody has unmuted uh do you have any question no sir actually clear okay thank you now today we will talk about aggregation and grouping so I hope you got a chance to revise all this things whatever we talked about so so far again quickly revising we started with um we basically started with simple data frame and uh data frame so for that you have to basically import pandas as PD it's a good idea to check the version of pandas then what we did is uh there are two data structure one is series and second is data frame so series um basically is a single you can think of series as a uh as a vector with index and you can construct a data frame like this so so we have here we have constructed two series cities and population and then we constructed a data frame which is Union of this series so uh we constructed data frame in the dictionary format where we have a key which is the column name and the values which is the series and based on that we can basically create a data frame something like this then we talked about how to explore data in data frame how to uh look at the shape of the data frame number of rows and columns what are the column column names how do you see summary of information in data frame and so on right last class we talked at length about how do you select specific entries in the data prame we talked about uh lock I lock and then we also talked about conditional statements and then we talked about a bit about how to do sampling how to detect null values and drop them then we also talked about how to write column in the data frame yeah talked about how do you drop rows and columns right so if axis is one what we basically drop is the column if AIS is zero we drop a row okay I hope all of these things are clear to you uh if it is clear we will move forward to aggregation and grouping so now whatever we are going to talk is very useful when you do uh data analysis when you do explorat data analysis uh let's say typical scenario will be you have data in your uh Excel file or in CS file or in Google Sheets or uh in some format right and then you upload that uh then you basically read the data into Panda's dataprint and you are curious about analyzing this data uh that is sitting inside Panda's data print of course there are two ways to do it you can either write code yourself you can write uh each of the analysis function yourself or second option is to use uh you know functions implemented inside pandas so uh pandas data frame has lot of inbuilt functions uh which you should be using for analyzing the data so let's try to uh learn them okay again U I would like to share this cheat sheet with all of you I will also mention this in the I found this very interesting Chi sheet about Paras so keep it handy it will be very useful showcase that not use correct mark down here uh so let's briefly look at this chip sheet present my screen can you see this can you see my screen so there is a chat sheet and it has got all kinds of interesting functions that you will in general use so have this handy okay you can check it later um after the class and we I think we have not talked yet about this reshipping data we'll see how to how to incorporate this particular thing okay we talked about this is the subset observation or the selection right we talked about this lock iock missing data handling we looked at okay all right so uh let's continue okay so keep this chit handy it comes from the um official documentation of pandas okay so let us uh formulate let us start with some simple aggregations okay so let us create a series sir so the cheat sheet is available inside the collab I have given a link so in case you want to access it you can access it later okay okay thank you sir since I not run the entire notebook from start I have to do these inputs again and again uh if you're running this at once you did not do this again okay I'm defining a random State and then let's create a series let's sir sorry to ask silly doubt sir like what is that 42 me in that random St uh this is just some um some seed I have taken you can take any number here okay you can take 99 you can take 100 so it is important to use this number uh in order to get the same result again and again we discussed about uh this particular thing last time right we said that it's good to select good to have a code like this so that you get the same sample again and again so you can you can use any of these number here okay most of our documentation is 42 that's how I I I'm used to this 42 but there is nothing special about 42 you can use anything where to save the file we download for example for assignments if you move away and do little later we are losing that file so even though I take a copy they said take a copy but still that file downloaded example for assignment um we get lost if the if we do it later a little later the page get closed so there's no other way which which which file are you losing ma'am like for example uh for assignment from our portal I download every time I have to download sir so so see I mean what you should do is you should download the file once then you should save that file on your disk or you can save it in your Google Drive and then next time you can load the file from your Google Drive yes sir I got that but is there any other way to save in the collab page there's no no no no no no collab see I mean see the whole philosophy of collab is the following right so see this connection that we are doing here this machine is not permanently allocated to us give me a minute okay there was some noise outside so I just close my windows so see what what is the philosophy of collab what is happening here I mean it's good to understand this right so see we are connecting to uh some runtime right and this runtime this is a temporary uh virtual machine that is alloted to you somewhere in the cloud right this is sitting inside Google Cloud so you're are getting a machine allocated to you temporarily for uh for running your work on that machine right uh so you have no way of saving that this collab on that machine right so you have to basically save your collab inside your Google Drive okay see there is a file uh save option and you can save a copy in drive next time you should open a collab from this drive and um then you have to run it again uh to get the output so are you are you saying that output is not saved or what is not saved now yes though I I did try copying drive but the file I think I'm getting lost again again I have to open it right yeah yeah uh yeah I mean try to yeah try to save it to Google Drive and so see I mean I have stored this particular file in my Google Drive and I open it whenever I want to do do more work on this right you can see that uh it also RS is my last run the output of my last run that is there yes thank you sir it that yeah sure so so let's create a series of some 10 random numbers okay so we have some 10 random numbers so let us now this series is created you can do simple aggregation on this so you can see that this random series do mean you can calculate mean of this series you can calculate standard deviation of this series so just for a second please scroll up huh just for a second please scr up SC uh just now we can try agregation functions mean yes what is your question sir please scroll up Sir just for one no I'm not hear you I'm not able to hear you okay it's okay now it's okay now sir okay now uh this is mean we can also do standard deviation you see the standard deviation of this series okay you can also do summation of these things can also sum of the elements in the getting it so all these numbers are some is this clear okay now let's create a data frame and try these things now this is clear in series right let's create a data PR with five rows and two columns coning random numbers how do you create it anyone data frame is equal to pd. data frame so write write along with me so that it is easier for you your dictionary format right so you say key a or we can do R do random 5 so let's do Rand random sorry random state. random stateand and second column again random state. Tri five so you can see that I have created two columns A and B and each column um I'm creating a series or a list with five random numbers so that is a value in each column so you can say DF let's print DF so you can see that you can see that there is column A and B each containing five values and these are random random okay now you can apply again all these type of things of this DF do sum so you get some for the column A and column B you can do all these type of functions of this okay by by default they are done column wise column wise these operations are applied is this clear sir after doing the agregation it is a and b is coming as a row right so can we can you display like that uh A and B will be the column and a single row we have to do something like uh you can do it you might have to let's say store this stats let's see what is the type of the stats sh I don't know how to do it starts the series we need to do something I don't know how okay no problem okay um yes please scroll up one minute you have a doubt okay now let's try to also do this let's say rowwise try the operations so d. mean you can actually look at a documentation of d. mean see here we can give access so the default access is uh zero we can make access equal to one now you can see that you're getting mean columnwise 0 89 and 97 the mean is approximately 93 right so you can see this this is now happening rowwise getting it you can also get okay these are very simple aggregations any questions so far on this so so you can also do aggregations like count uh then you can use median you can use broad for product of all atoms you can do mad which is mean absolute deviation all these type of aggregations you can apply okay all right now let's TR to understand group I so groupy has three operations uh split apply and combine okay let's got three operations split and combine what happens in Split we split data frame into smaller data frames into multiple smaller data forms based on the Val based on the keys based on the values of keys apply we apply desired agregation or any other function aggregation transformation any other functions each data frame and combine we combine results State dat is this clear three stages uh there is a nice figure I will see if I can show this to you let me see if I can bring this figure to you okay see uh this is interesting okay so this is your original data frame there is a key and there is data so keys are a b c a b and c are three keys right they're repeated and then there's some data now when you split by column key what will happen is that we will create three different small data FRS one for the value of key equal to a value of keyal to B and value of ke equal to C and you can see that for a we have values 1 and four so those values are copied over here for B the values are 2 and five they are copied over here and for C values are three and six they copied over here and then let's say we apply the function and the function is sum so we of these values and make it five a this becomes 5 4 + 1 = 5 this becomes 7 5 + 2 and 3 + 6 = 9 so the value of C becomes 9 after applying the aggregation function and then you combine you combine these small data frames and give one data frame as an answer so if you are familiar with distributed computing right I mean especially when you have very large amount of data this is what is normally done it is called as map redu where first we uh you know divide the entire data set into smaller uh chunks we apply the function on the smaller chunks and then we combine so you can see that once I divide the data set into smaller chunks I can apply these operations in parallel it is not really happening here but I'm just giving you an analogy uh so this is how uh this split apply and combine Works any questions on this is this clear to everyone is this clear to everyone it's fairly straightforward let's yes it's clear yes sir clear it is let's try to uh let's try to create a data F okay like this so uh let's say cre a dictionary there are two keys I want to use key and data and here let's the keys are I'm trying this thing and see whether it works and let us also do okay uh so let's see if this works okay so we have data so see some of you might get what is this into two so what I'm saying is that the first values are ABC and then repeat them two times so I have ABC and ABC okay and the values here are 0 1 2 3 4 5 getting it so this is another way of saying I could have also written it like this you multiple ways of doing this right I mean I could have written it like this um what was that last time you tried this right string ABC ABC we could have done something like this or we could have written um a list with these three elements repeated so this is a short hand of writing that clear so we now have data uh sir I have a question over here yeah yeah would you please show show us the example uh that ABC in top whatever you have yeah yeah here no no no not that the text yes sir you is giving us example string AB C or ABC again so that will that will not I mean the same Q will not print it uh six times because as I am saying string this is not a string right so we can this is this is character I do understand it's two times but you showed as example ABC and ABC so it will not be not exactly string it I think s Str something yeah yeah no but I think it was not s last time we did something no okay sorry not Str Str we did list I guess list list sorry list to be list this one is something like this see or we can do we can repeat basically this particular thing six times thanks for pointing this out something like this yeah these things are equal equivalent so whatever uh whatever works for you you can write that so now let's try to uh go for group y so we say DF do group by let us print this also so what do we get after doing Group by we basically get data frame Group by object you can apply let's say some on top of this you get what do you get you get sum by keys you can see that a has got values let us stop this so you can see that a has value got value 0 and three so 0 + 3 is 3 uh B has got values one and four the sum will be five and for C the sum will be seven so you can see that this works okay so U we do group by we specify the column name on which you want to do group by and then the resultant right what you see is the key becomes your index and the distinct values in Keys become your index names or index IDs and the second column which is data here is the column in a new new data frame and the output that we see in this column is the output of the uh aggregate function does this make sense yes sir we understood this things very but sir it is working the example you have given in the top the same same way it is working or is a chunk of memory for processing these things it is working exactly in the same way in the background okay so when we do group by right uh we saw this object cor yes yes just do group by we saw this object data frame Group by m which is this particular thing okay and when we apply some we get this particular thing and then the combine happens and you get to see the output which is well okay so we can also find out the mean and other things the same way right yeah you can apply you can apply all kinds of application [Music] okay