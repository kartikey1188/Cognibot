[Music] in the previous week we looked at the software development process and we saw various models like the waterfall model and agile model in this week we will be looking at the first step in software engineering basically identifying requirements for a software solution this is a very important step because we need to spend sufficient time and effort in identifying such requirements and documenting why because if we do not do this thoroughly there will be a mismatch between what the user expects and what the software developer does so this week we will focus on requirements ok so you might not be so convinced that identifying requirements are important and you might also think why we need to spend so much time and effort in identifying as well as documenting these requirements can't we just identify the requirements as we go about designing and developing the software system so let's reflect on this question so learners what are the disadvantages if we do not spend time and effort in identifying and documenting requirements you can pause this video and write down your responses before proceeding our vision of what the software should look like and behave is quite different from what the user has in mind even historically many projects have had this problem developers started to implement something while the users actually were expecting something else so there was a mismatch of expectations now what is the cost involved here you've spent a lot of time effort and money in developing something which was not what your customer asked for so so you have to make changes so there are more iterations in the software development process and this pushes up the development cost very significantly so to summarize the importance of requirement identification and analysis are twofold one is that we understand developers understand what the customers want of how the software should look and behave and two the customers agree that the developers are understanding is along the lines of what they are expecting otherwise the cost the time the effort involved in developing the software can increase significantly so now that we have established that requirements are important how do we go about it here the first thing i need to know is what does my customer want from the system again remember the customer is not always the end user the customer can be an internal user customer could be somebody from a different team so i need to ask the customers what do they want and then i look at what they want analyze them in order to plan how do i develop my piece of the software all of this may sound fairly abstract at this point and we will look at an example later but the point to keep in mind here is that first teams gather requirements then they analyze them and only after that they think about how to develop the software let us start with requirement gathering that seems very straight forward right just go ask clients what they want and we get a bunch of requirements in reality it is not that simple first of all there are different kinds of people who are going to be your customers in the system all these users are called stakeholders of the system so when you introduce a software system it influences different types of users they may belong to your own organization other organizations or end users and they may have different roles and profiles so what is required is to be able to understand the requirements of all these users in a broad holistic manner before diving into designing the software let us look at this with an example so let us take an example from amazon itself and let's say amazon wants to develop a portal for people who want to sell their products online the products which sellers list on the portal will be available for people to buy on amazon so let's think about the frequent users of this seller port and these users are known as the primary users of our system so who do you think are primary users of this amazon seller portal well they can be the independent sellers who sell specific products primary users can also be the sales team of consumer companies like those who sell electronics like mobiles computers etc even independent authors and publishers who want to sell their books online can be the primary users of this seller portal system then there are other types of users who are known as the secondary users and these users they do not directly use the system but use the system through an intermediary so can you think of some secondary users of this seller portal so earlier we mentioned that the sales team they can be primary users and such sales teams usually have managers who periodically want to check the sales numbers the profits and margins etcetera so the sales managers can be the secondary users of this amazon seller put and then there are users who do not use the software but are affected by the introduction of the software or they even influence the purchase of the software so these users are known as the tertiary users of the system so learners can you think of tertiary users of this amazon seller portal who do you think are users who do not use the system at all but are affected by it in some way you can pause this video and write down your responses before proceeding so who are the tertiary users well logistics shipping companies they are responsible for delivering items to buyers so they are potential tertiary users of the system another type of tertiary users can be banks so the portal has to interface with banks to ensure that timely transfer of money happens to buyers based on the sale of their products what about people who buy on amazon even they are tertiary users right they're buying depends on what products sellers sell on the portal so all of these users are possible tertiary users of the system we saw that there are different uses of the system and we have to seek requirements from these users so how do we go about it do we randomly tap a few users and ask them or do we conduct systematic interviews there are many ways of doing this in many cases a basic interview might be sufficient but there are also ways like studying existing documentation having focus groups of different categories of users and also by observing what users are doing with the system or what do they need we learn about all this in the next video so now let's say we have gathered these requirements and now the next step is to analyze them so how do we go about doing that so during requirement analysis one analyzes the gathered requirements to form a clear understanding of the exact customer requirements and to weed out any problems in the gathered requirements and these problems can arise because we will be gathering requirements from various stakeholders and from different sources so let's take the example of the amazon seller portal which we discussed earlier let's say we got a bunch of requirements from different clients different stakeholders so now what kind of problems or issues can arise from the requirements gathered let's reflect on this question for a moment so what kind of problems or issues can arise from the requirements gathered pause this video and write down your responses before proceeding one issue can be that requirements are not clear they might be ambiguous now what does this mean for example the requirement of independent sellers may be that they need to manage their inventory ok but this is ambiguous because what does manage really mean it depends on how you interpret it i may interpret manage as being able to add one more product you may interpret manage as being able to modify the price of a product or some other feature of the product somebody else may interpret manage as in a third way say delete some products add some new products and so on so the point is that there are several interpretations possible and developers will build a feature based on their own requirement so what we have to ensure is that the idea of what is required is the same both from the users perspective and the developers perspective another issue can be that the requirements are inconsistent or sometimes contradicting each other for example if you think of the amazon portal it may be that independent sellers may want their payment credited every week on the other hand a banking system may say that the payment can be credited only bi-weekly so these two requirements may actually conflict with each other while building the system so as developers we need to resolve these requirements in one way or the other for example you might say that for independent sellers we might tell them that this is all that can be provided as a feature once people know what the constraints are then you can go ahead with building the software a third issue could be that requirements are incomplete what does that mean it means that some aspects of the implementation may have been overlooked simply because neither the customer nor the developer were able to imagine the all the details of the system before beginning to develop it right for example independent sellers may mention that they want to be able to track orders now what does track orders mean does it mean that you want to track which orders are delivered or does it mean that you want to track the order while it's in transit or does it mean that you want to keep track of what orders have been returned etc so which type of orders does the seller want to track is an important information that the developer needs before being able to proceed to summarize in this video we have seen the importance of requirement identification and analysis identifying requirement by considering primary secondary and tertiary users of the system analysis of requirement is essentially to identify anomalies inconsistencies and incompleteness among the requirements once we have done this we are in a better position to start designing the system